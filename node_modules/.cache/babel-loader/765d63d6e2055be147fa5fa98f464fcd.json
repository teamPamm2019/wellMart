{"ast":null,"code":"var _jsxFileName = \"/Users/miguelgalarraga/googlemapreact/src/App.js\";\nimport React, { Component } from \"react\";\nimport { Map, InfoWindow, Marker, GoogleApiWrapper } from \"google-maps-react\";\nimport API from \"./utils/API\";\nimport Wrapper from \"./components/Wrapper\";\nimport Form from \"./components/Form\";\nimport { Container } from \"./components/Grid\";\nexport class MapContainer extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      laT1: \"\",\n      lnG1: \"\",\n      zipcode: \"\",\n      elements: [],\n      activeMarker: {},\n      selectedPlace: {},\n      selectedPhone: {},\n      selectedStree: {},\n      selectedCity: {},\n      selectedState: {},\n      selectedZip: {},\n      showingInfoWindow: false\n    };\n\n    this.loadZipCode = () => {\n      API.getZipCode().then(res => this.setState({\n        location: res.data,\n        lat: \"\",\n        lng: \"\"\n      })).catch(err => console.log(err));\n    };\n\n    this.handleInputChange = event => {\n      this.setState({\n        zipcode: event.target.value\n      });\n    };\n\n    this.handleFormSubmit = event => {\n      event.preventDefault();\n      API.getZipCode(this.state.zipcode).then(res => {\n        if (res.data.status === \"error\") {\n          throw new Error(res.data.location);\n        }\n\n        this.setState({\n          laT1: res.data.lat,\n          lnG1: res.data.lng\n        });\n        console.log(this.state.laT1, this.state.lnG1);\n        this.secondfunc(this.state.laT1, this.state.lnG1);\n      }).catch(err => this.setState({\n        error: err.location\n      }));\n    };\n\n    this.secondfunc = () => {\n      API.getDoctor(this.state.laT1, this.state.lnG1).then(res => {\n        const results = Object.keys(res.data).map(i => res.data[i]);\n        var newStateArray = this.state.elements.slice();\n\n        for (var i = 0; i < results[1].length; i++) {\n          newStateArray.push({\n            id: i,\n            lat: results[1][i].lat,\n            long: results[1][i].lon,\n            doctorname: results[1][i].name,\n            street: results[1][i].visit_address.street,\n            city: results[1][i].visit_address.city,\n            state: results[1][i].visit_address.state,\n            zip: results[1][i].visit_address.zip,\n            phone: results[1][i].phones[0].number\n          });\n        }\n\n        this.setState({\n          elements: newStateArray\n        });\n        console.log(this.state.elements);\n      });\n    };\n\n    this.onMarkerClick = (props, marker, e) => {\n      this.setState({\n        selectedPlace: props,\n        selectedPhone: props,\n        selectedStreet: props,\n        selectedCity: props,\n        selectedState: props,\n        selectedZip: props,\n        activeMarker: marker,\n        showingInfoWindow: true\n      });\n    };\n\n    this.onInfoWindowClose = () => {\n      this.setState({\n        activeMarker: null,\n        showingInfoWindow: false\n      });\n    };\n\n    this.onMapClick = props => {\n      if (this.state.showingInfoWindow) {\n        this.setState({\n          showingInfoWindow: false,\n          activeMarker: null\n        });\n      }\n    };\n\n    this.displayMarkers = () => {\n      return this.state.elements.map((element, index) => {\n        return React.createElement(Marker, {\n          key: index,\n          id: index,\n          onClick: this.onMarkerClick,\n          position: {\n            lat: element.lat,\n            lng: element.long\n          },\n          name: element.doctorname,\n          stree: element.street,\n          city: element.city,\n          state: element.state,\n          zip: element.zip,\n          phone: element.phone,\n          icon: {\n            url: \"https://img.icons8.com/emoji/48/000000/man-health-worker.png\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 106\n          },\n          __self: this\n        });\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.loadZipCode();\n  }\n\n  render() {\n    return React.createElement(Wrapper, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }, React.createElement(Container, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }, React.createElement(Form, {\n      handleFormSubmit: this.handleFormSubmit,\n      handleInputChange: this.handleInputChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    }, React.createElement(Map, {\n      className: \"map\",\n      google: this.props.google,\n      onClick: this.onMapClick,\n      zoom: 14,\n      initialCenter: {\n        lat: 25.827848,\n        lng: -80.316078\n      },\n      style: {\n        height: \"50%\",\n        position: \"relative\",\n        width: \"50%\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    }, this.displayMarkers(), React.createElement(Marker, {\n      name: \"Zip Code's Center Position\",\n      onClick: this.onMarkerClick,\n      position: {\n        lat: this.state.laT1,\n        lng: this.state.lnG1\n      },\n      icon: {\n        url: \"https://img.icons8.com/color/48/000000/worldwide-location.png\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150\n      },\n      __self: this\n    }), React.createElement(InfoWindow, {\n      marker: this.state.activeMarker,\n      onClose: this.onInfoWindowClose,\n      visible: this.state.showingInfoWindow,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164\n      },\n      __self: this\n    }, this.state.selectedPlace.name), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165\n      },\n      __self: this\n    }, this.state.selectedStreet.street, \",\", this.state.selectedCity.city, \",\", this.state.selectedState.state, \",\", this.state.selectedZip.zip), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168\n      },\n      __self: this\n    }, \"phone:\", \" \", this.state.selectedPhone.phone))))));\n  }\n\n}\nconst APIkey3 = process.env.REACT_APP_GOOGLE_KEY;\nexport default GoogleApiWrapper({\n  apiKey: APIkey3\n})(MapContainer); // export default MapContainer;","map":{"version":3,"sources":["/Users/miguelgalarraga/googlemapreact/src/App.js"],"names":["React","Component","Map","InfoWindow","Marker","GoogleApiWrapper","API","Wrapper","Form","Container","MapContainer","state","laT1","lnG1","zipcode","elements","activeMarker","selectedPlace","selectedPhone","selectedStree","selectedCity","selectedState","selectedZip","showingInfoWindow","loadZipCode","getZipCode","then","res","setState","location","data","lat","lng","catch","err","console","log","handleInputChange","event","target","value","handleFormSubmit","preventDefault","status","Error","secondfunc","error","getDoctor","results","Object","keys","map","i","newStateArray","slice","length","push","id","long","lon","doctorname","name","street","visit_address","city","zip","phone","phones","number","onMarkerClick","props","marker","e","selectedStreet","onInfoWindowClose","onMapClick","displayMarkers","element","index","url","componentDidMount","render","google","height","position","width","APIkey3","process","env","REACT_APP_GOOGLE_KEY","apiKey"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { Map, InfoWindow, Marker, GoogleApiWrapper } from \"google-maps-react\";\nimport API from \"./utils/API\";\nimport Wrapper from \"./components/Wrapper\";\nimport Form from \"./components/Form\";\nimport { Container } from \"./components/Grid\";\n\nexport class MapContainer extends Component {\n  state = {\n    laT1: \"\",\n    lnG1: \"\",\n    zipcode: \"\",\n    elements: [],\n    activeMarker: {},\n    selectedPlace: {},\n    selectedPhone: {},\n    selectedStree: {},\n    selectedCity: {},\n    selectedState: {},\n    selectedZip: {},\n    showingInfoWindow: false\n  };\n\n  componentDidMount() {\n    this.loadZipCode();\n  }\n\n  loadZipCode = () => {\n    API.getZipCode()\n      .then(res => this.setState({ location: res.data, lat: \"\", lng: \"\" }))\n      .catch(err => console.log(err));\n  };\n\n  handleInputChange = event => {\n    this.setState({ zipcode: event.target.value });\n  };\n\n  handleFormSubmit = event => {\n    event.preventDefault();\n    API.getZipCode(this.state.zipcode)\n      .then(res => {\n        if (res.data.status === \"error\") {\n          throw new Error(res.data.location);\n        }\n        this.setState({ laT1: res.data.lat, lnG1: res.data.lng });\n        console.log(this.state.laT1, this.state.lnG1);\n        this.secondfunc(this.state.laT1, this.state.lnG1);\n      })\n      .catch(err => this.setState({ error: err.location }));\n  };\n\n  secondfunc = () => {\n    API.getDoctor(this.state.laT1, this.state.lnG1).then(res => {\n      const results = Object.keys(res.data).map(i => res.data[i]);\n      var newStateArray = this.state.elements.slice();\n      for (var i = 0; i < results[1].length; i++) {\n        newStateArray.push({\n          id: i,\n          lat: results[1][i].lat,\n          long: results[1][i].lon,\n          doctorname: results[1][i].name,\n          street: results[1][i].visit_address.street,\n          city: results[1][i].visit_address.city,\n          state: results[1][i].visit_address.state,\n          zip: results[1][i].visit_address.zip,\n          phone: results[1][i].phones[0].number\n        });\n      }\n      this.setState({ elements: newStateArray });\n      console.log(this.state.elements);\n    });\n  };\n\n  onMarkerClick = (props, marker, e) => {\n    this.setState({\n      selectedPlace: props,\n      selectedPhone:props,\n      selectedStreet:props,\n      selectedCity:props,\n      selectedState:props,\n      selectedZip:props,\n      activeMarker: marker,\n      showingInfoWindow: true\n    });\n  };\n\n  onInfoWindowClose = () => {\n    this.setState({\n      activeMarker: null,\n      showingInfoWindow: false\n    });\n  };\n\n  onMapClick = props => {\n    if (this.state.showingInfoWindow) {\n      this.setState({\n        showingInfoWindow: false,\n        activeMarker: null\n      });\n    }\n  };\n\n  displayMarkers = () => {\n    return this.state.elements.map((element, index) => {\n      return (\n        <Marker\n          key={index}\n          id={index}\n          onClick={this.onMarkerClick}\n          position={{\n            lat: element.lat,\n            lng: element.long\n          }}\n          name={element.doctorname}\n          stree={element.street}\n          city={element.city}\n          state={element.state}\n          zip={element.zip}\n          phone={element.phone}\n          icon={{\n            url: \"https://img.icons8.com/emoji/48/000000/man-health-worker.png\"\n          }}\n        />\n      );\n    });\n  };\n\n  render() {\n    return (\n      <Wrapper>\n        <Container>\n          <div>\n            <Form\n              handleFormSubmit={this.handleFormSubmit}\n              handleInputChange={this.handleInputChange}\n            />\n          </div>\n          <br />\n          <br />\n          <div>\n            <Map\n              className=\"map\"\n              google={this.props.google}\n              onClick={this.onMapClick}\n              zoom={14}\n              initialCenter={{ lat: 25.827848, lng: -80.316078 }}\n              style={{ height: \"50%\", position: \"relative\", width: \"50%\" }}\n            >\n              {this.displayMarkers()}\n              <Marker\n                name=\"Zip Code's Center Position\"\n                onClick={this.onMarkerClick}\n                position={{ lat: this.state.laT1, lng: this.state.lnG1 }}\n                icon={{\n                  url:\n                    \"https://img.icons8.com/color/48/000000/worldwide-location.png\"\n                }}\n              />\n              <InfoWindow\n                marker={this.state.activeMarker}\n                onClose={this.onInfoWindowClose}\n                visible={this.state.showingInfoWindow}\n              >\n                <div>{this.state.selectedPlace.name}</div>\n                <div>\n                  {this.state.selectedStreet.street},{this.state.selectedCity.city},{this.state.selectedState.state},{this.state.selectedZip.zip}\n                </div>\n                <div>\n                  {\"phone:\"} {this.state.selectedPhone.phone}\n                </div>\n              </InfoWindow> \n            </Map>\n          </div>\n        </Container>\n      </Wrapper>\n    );\n  }\n}\n\nconst APIkey3 = process.env.REACT_APP_GOOGLE_KEY;\n\nexport default GoogleApiWrapper({\n  apiKey: APIkey3\n})(MapContainer);\n\n// export default MapContainer;\n"]},"metadata":{},"sourceType":"module"}