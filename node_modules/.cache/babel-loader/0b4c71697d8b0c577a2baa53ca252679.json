{"ast":null,"code":"import React, { Component } from \"react\";\nimport { Map, GoogleApiWrapper } from \"google-maps-react\"; // Global variables\n\nvar laT1 = 0;\nvar lnG1 = 0;\nvar element = []; // Event listener for all button elements\n\n$(\"#add-to-do\").on(\"click\", function (event) {\n  // prevent form from trying to submit/refresh the page\n  event.preventDefault(); //zip code typed by the user\n\n  var zipcode = $(\"#to-do\").val().trim(); // checking if the zip code given has 5 digits, if the zip code given has less or more than 5 digits\n  // there will not be any URL's construction to zipcodeapi, i.e., any axios call etc, otherwise\n  // the rest of code is executed, etc.\n\n  if (zipcode.toString().length != 5) {\n    var p = $(\"<p>\");\n    var p1 = $(\"<p>\").text(\"PLEASE TYPE A VALID FIVE-DIGITS  ZIP  CODE!!!\");\n    p = p.append(p1);\n    $(\"#doctorsList\").append(p);\n  } else {\n    // Constructing a URL to search zipcodeapi to covert zip code into location (latitude and longitude)\n    var queryURL = \"https://cors-anywhere.herokuapp.com/https://www.zipcodeapi.com/rest/c1wr56zxJrT9VdP63xSMddq1jzu3difJ6qcIpH87Ak8MWbBRQsfzPP3r5ISW15ET/info.json/\" + zipcode + \"/degrees\"; // Using axiosStart to show the loader image\n\n    $(document).axiosStart(function () {\n      // Show image container\n      $(\"#loader\").show();\n    }); // Performing our axios GET request to convert zip code into location (latitude and longitude)\n\n    $.axios({\n      url: queryURL,\n      method: \"GET\"\n    }) // After the data comes back from the API\n    .then(function (response) {\n      // // store the response ((latitude, longitude) from the first axios call\n      laT1 = response.lat;\n      lnG1 = response.lng;\n      sample2(laT1, lnG1);\n    });\n\n    function sample2() {\n      // radius of search around the location (latitude and longitude) estimated above\n      a = 10; // Constructing a URL to search betterdoctor for doctor's directory based on location\n\n      var queryURL = \"https://api.betterdoctor.com/2016-03-01/practices?location=\" + laT1 + \",\" + lnG1 + \",\" + a + \"&limit=2000&user_key=fb84a6a95d50d7f1b141dcc24be094dd\"; // Performing our axios GET request for doctors's directory based on location\n\n      $.axios({\n        url: queryURL,\n        method: \"GET\"\n      }) // After the data comes back from the API\n      .then(function (response) {\n        // Storing a response into the results variable\n        var results = response.data; // Using axiosComplete for hiding\n\n        $(document).axiosComplete(function () {\n          // Hide image container\n          $(\"#loader\").hide();\n        }); // Looping over every result item\n\n        for (var i = 0; i < results.length; i++) {\n          element.push({\n            lat: results[i].lat,\n            long: results[i].lon,\n            name: results[i].name,\n            street: results[i].visit_address.street,\n            city: results[i].visit_address.city,\n            state: results[i].visit_address.state,\n            zip: results[i].visit_address.zip,\n            phone: results[i].phones[0].number\n          });\n        }\n\n        initMap(element, laT1, lnG1);\n      });\n    }\n  }\n});\n\nfunction initMap() {\n  var map = new google.maps.Map(document.getElementById(\"map-canvas\"), {\n    zoom: 14,\n    center: new google.maps.LatLng(laT1, lnG1),\n    mapTypeId: google.maps.MapTypeId.ROADMAP\n  }); // var iconBase = \"http://maps.google.com/mapfiles/kml/paddle/\";\n\n  var icon = {\n    url: \"./icons8-man-health-worker-48.png\",\n    scaledSize: new google.maps.Size(50, 50) // scaled size\n    // origin: new google.maps.Point(0, 0), // origin\n    // anchor: new google.maps.Point(0,0),\n    // labelOrigin: new google.maps.Point(37,21)\n\n  };\n  var contentString = [];\n  var infowindow = new google.maps.InfoWindow({});\n  var marker, i;\n\n  for (i = 0; i < element.length; i++) {\n    marker = new google.maps.Marker({\n      position: new google.maps.LatLng(element[i].lat, element[i].long),\n      map: map,\n      icon: icon // label: {\n      //   text: '$7',\n      //   color: \"#eb3a44\",\n      //   fontSize: \"16px\",\n      //   fontWeight: \"bold\"\n      // }\n\n    });\n    var infowindow = new google.maps.InfoWindow({});\n    contentString.push('<div id=\"content\">' + '<div id=\"siteNotice\">' + \"</div>\" + element[i].name + \"<div\" + element[i].street + \"</div>\" + \"<div>\" + element[i].city + \",\" + \" \" + element[i].state + \",\" + \" \" + element[i].zip + \"</div>\" + \"<div>\" + \"phone:\" + element[i].phone + \"</div>\");\n    google.maps.event.addListener(marker, \"click\", function (marker, i) {\n      return function () {\n        infowindow.setContent(contentString[i]);\n        infowindow.open(map, marker);\n      };\n    }(marker, i));\n  }\n}\n\nexport default GoogleApiWrapper({\n  apiKey: \"AIzaSyDgZNmvPTkEILexjd5Q0u5dKkENSrzXrYc\"\n})(MapContainer);","map":{"version":3,"sources":["/Users/miguelgalarraga/googlemapreact/src/App.js"],"names":["React","Component","Map","GoogleApiWrapper","laT1","lnG1","element","$","on","event","preventDefault","zipcode","val","trim","toString","length","p","p1","text","append","queryURL","document","axiosStart","show","axios","url","method","then","response","lat","lng","sample2","a","results","data","axiosComplete","hide","i","push","long","lon","name","street","visit_address","city","state","zip","phone","phones","number","initMap","map","google","maps","getElementById","zoom","center","LatLng","mapTypeId","MapTypeId","ROADMAP","icon","scaledSize","Size","contentString","infowindow","InfoWindow","marker","Marker","position","addListener","setContent","open","apiKey","MapContainer"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { Map, GoogleApiWrapper } from \"google-maps-react\";\n\n// Global variables\n\nvar laT1 = 0;\nvar lnG1 = 0;\nvar element = [];\n\n// Event listener for all button elements\n\n$(\"#add-to-do\").on(\"click\", function(event) {\n  // prevent form from trying to submit/refresh the page\n\n  event.preventDefault();\n\n  //zip code typed by the user\n\n  var zipcode = $(\"#to-do\")\n    .val()\n    .trim();\n\n  // checking if the zip code given has 5 digits, if the zip code given has less or more than 5 digits\n  // there will not be any URL's construction to zipcodeapi, i.e., any axios call etc, otherwise\n  // the rest of code is executed, etc.\n\n  if (zipcode.toString().length != 5) {\n    var p = $(\"<p>\");\n    var p1 = $(\"<p>\").text(\"PLEASE TYPE A VALID FIVE-DIGITS  ZIP  CODE!!!\");\n    p = p.append(p1);\n    $(\"#doctorsList\").append(p);\n  } else {\n    // Constructing a URL to search zipcodeapi to covert zip code into location (latitude and longitude)\n    var queryURL =\n      \"https://cors-anywhere.herokuapp.com/https://www.zipcodeapi.com/rest/c1wr56zxJrT9VdP63xSMddq1jzu3difJ6qcIpH87Ak8MWbBRQsfzPP3r5ISW15ET/info.json/\" +\n      zipcode +\n      \"/degrees\";\n\n    // Using axiosStart to show the loader image\n\n    $(document).axiosStart(function() {\n      // Show image container\n      $(\"#loader\").show();\n    });\n\n    // Performing our axios GET request to convert zip code into location (latitude and longitude)\n\n    $.axios({\n      url: queryURL,\n      method: \"GET\"\n    })\n      // After the data comes back from the API\n\n      .then(function(response) {\n        // // store the response ((latitude, longitude) from the first axios call\n\n        laT1 = response.lat;\n        lnG1 = response.lng;\n        sample2(laT1, lnG1);\n      });\n\n    function sample2() {\n      // radius of search around the location (latitude and longitude) estimated above\n\n      a = 10;\n\n      // Constructing a URL to search betterdoctor for doctor's directory based on location\n\n      var queryURL =\n        \"https://api.betterdoctor.com/2016-03-01/practices?location=\" +\n        laT1 +\n        \",\" +\n        lnG1 +\n        \",\" +\n        a +\n        \"&limit=2000&user_key=fb84a6a95d50d7f1b141dcc24be094dd\";\n\n      // Performing our axios GET request for doctors's directory based on location\n\n      $.axios({\n        url: queryURL,\n        method: \"GET\"\n      })\n        // After the data comes back from the API\n\n        .then(function(response) {\n          // Storing a response into the results variable\n\n          var results = response.data;\n\n          // Using axiosComplete for hiding\n\n          $(document).axiosComplete(function() {\n            // Hide image container\n            $(\"#loader\").hide();\n          });\n\n          // Looping over every result item\n\n          for (var i = 0; i < results.length; i++) {\n            element.push({\n              lat: results[i].lat,\n              long: results[i].lon,\n              name: results[i].name,\n              street: results[i].visit_address.street,\n              city: results[i].visit_address.city,\n              state: results[i].visit_address.state,\n              zip: results[i].visit_address.zip,\n              phone: results[i].phones[0].number\n            });\n          }\n          initMap(element, laT1, lnG1);\n        });\n    }\n  }\n});\n\nfunction initMap() {\n  var map = new google.maps.Map(document.getElementById(\"map-canvas\"), {\n    zoom: 14,\n    center: new google.maps.LatLng(laT1, lnG1),\n    mapTypeId: google.maps.MapTypeId.ROADMAP\n  });\n\n  // var iconBase = \"http://maps.google.com/mapfiles/kml/paddle/\";\n\n  var icon = {\n    url: \"./icons8-man-health-worker-48.png\",\n    scaledSize: new google.maps.Size(50, 50) // scaled size\n    // origin: new google.maps.Point(0, 0), // origin\n    // anchor: new google.maps.Point(0,0),\n    // labelOrigin: new google.maps.Point(37,21)\n  };\n\n  var contentString = [];\n\n  var infowindow = new google.maps.InfoWindow({});\n\n  var marker, i;\n\n  for (i = 0; i < element.length; i++) {\n    marker = new google.maps.Marker({\n      position: new google.maps.LatLng(element[i].lat, element[i].long),\n      map: map,\n      icon: icon\n      // label: {\n      //   text: '$7',\n      //   color: \"#eb3a44\",\n      //   fontSize: \"16px\",\n      //   fontWeight: \"bold\"\n      // }\n    });\n\n    var infowindow = new google.maps.InfoWindow({});\n\n    contentString.push(\n      '<div id=\"content\">' +\n        '<div id=\"siteNotice\">' +\n        \"</div>\" +\n        element[i].name +\n        \"<div\" +\n        element[i].street +\n        \"</div>\" +\n        \"<div>\" +\n        element[i].city +\n        \",\" +\n        \" \" +\n        element[i].state +\n        \",\" +\n        \" \" +\n        element[i].zip +\n        \"</div>\" +\n        \"<div>\" +\n        \"phone:\" +\n        element[i].phone +\n        \"</div>\"\n    );\n\n    google.maps.event.addListener(\n      marker,\n      \"click\",\n      (function(marker, i) {\n        return function() {\n          infowindow.setContent(contentString[i]);\n          infowindow.open(map, marker);\n        };\n      })(marker, i)\n    );\n  }\n}\n\nexport default GoogleApiWrapper({\n  apiKey: \"AIzaSyDgZNmvPTkEILexjd5Q0u5dKkENSrzXrYc\"\n})(MapContainer);\n"]},"metadata":{},"sourceType":"module"}