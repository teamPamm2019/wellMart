{"ast":null,"code":"var _jsxFileName = \"/Users/miguelgalarraga/googlemapreact/src/App.js\";\nimport React, { Component } from \"react\";\nimport { Map, InfoWindow, Marker, GoogleApiWrapper } from \"google-maps-react\";\nimport API from \"./utils/API\";\nimport Form from \"./components/Form\";\nimport Frame from \"./components/Frame\";\nimport Wrapper from \"./components/Wrapper\";\nimport { Col, Grid } from \"react-native-easy-grid\";\nconst mapStyles = {\n  width: \"50%\",\n  height: \"50%\"\n};\nexport class MapContainer extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      laT1: 0,\n      lnG1: 0,\n      zipcode: 0,\n      elements: [],\n      contentString: [],\n      activeMarker: {},\n      selectedPlace: {},\n      showingInfoWindow: false\n    };\n\n    this.loadZipCode = () => {\n      API.getZipCode().then(res => this.setState({\n        location: res.data,\n        lat: \"\",\n        lng: \"\"\n      })).catch(err => console.log(err));\n    };\n\n    this.handleInputChange = event => {\n      this.setState({\n        zipcode: event.target.value\n      });\n    };\n\n    this.handleFormSubmit = event => {\n      event.preventDefault();\n      API.getZipCode(this.state.zipcode).then(res => {\n        if (res.data.status === \"error\") {\n          throw new Error(res.data.location);\n        }\n\n        this.setState({\n          laT1: res.data.lat,\n          lnG1: res.data.lng\n        });\n        console.log(this.state.laT1, this.state.lnG1);\n        this.secondfunc(this.state.laT1, this.state.lnG1);\n      }).catch(err => this.setState({\n        error: err.location\n      }));\n    };\n\n    this.secondfunc = () => {\n      API.getDoctor(this.state.laT1, this.state.lnG1).then(res => {\n        const results = Object.keys(res.data).map(i => res.data[i]);\n        var newStateArray = this.state.elements.slice();\n\n        for (var i = 0; i < results[1].length; i++) {\n          newStateArray.push({\n            lat: results[1][i].lat,\n            long: results[1][i].lon,\n            name: results[1][i].name,\n            street: results[1][i].visit_address.street,\n            city: results[1][i].visit_address.city,\n            state: results[1][i].visit_address.state,\n            zip: results[1][i].visit_address.zip,\n            phone: results[1][i].phones[0].number\n          });\n        }\n\n        this.setState({\n          elements: newStateArray\n        });\n        console.log(this.state.elements);\n        this.info(this.state.elements);\n      });\n    };\n\n    this.info = () => {\n      var newStateArray1 = this.state.contentString.slice();\n\n      for (var i = 0; i < this.state.elements.length; i++) {\n        newStateArray1.push('<div id=\"content\">' + '<div id=\"siteNotice\">' + \"</div>\" + this.state.elements[i].name + \"<div\" + this.state.elements[i].street + \"</div>\" + \"<div>\" + this.state.elements[i].city + \",\" + \" \" + this.state.elements[i].state + \",\" + \" \" + this.state.elements[i].zip + \"</div>\" + \"<div>\" + \"phone:\" + this.state.elements[i].phone + \"</div>\");\n      }\n\n      this.setState({\n        contentString: newStateArray1\n      });\n      console.log(this.state.contentString);\n    };\n\n    this.onMarkerClick = (props, marker) => this.setState({\n      activeMarker: marker,\n      selectedPlace: props,\n      showingInfoWindow: true\n    });\n\n    this.onInfoWindowClose = () => this.setState({\n      activeMarker: null,\n      showingInfoWindow: false\n    });\n\n    this.onMapClicked = () => {\n      if (this.state.showingInfoWindow) this.setState({\n        activeMarker: null,\n        showingInfoWindow: false\n      });\n    };\n\n    this.displayMarkers = () => {\n      return this.state.elements.map((element, index) => {\n        return React.createElement(Marker, {\n          key: index,\n          id: index,\n          position: {\n            lat: element.lat,\n            lng: element.long\n          },\n          icon: {\n            url: \"https://img.icons8.com/emoji/48/000000/man-health-worker.png\"\n          },\n          onClick: this.onMarkerClick,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 130\n          },\n          __self: this\n        }, React.createElement(InfoWindow, {\n          marker: this.state.activeMarker,\n          onClose: this.onInfoWindowClose,\n          visible: this.state.showingInfoWindow,\n          setContent: this.state.contentString[1],\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 142\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 148\n          },\n          __self: this\n        }, React.createElement(\"h4\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 149\n          },\n          __self: this\n        }, this.state.selectedPlace.name))));\n      });\n    };\n\n    this.displayInfoWindow = () => {\n      return this.state.elements.map((element, index) => {\n        return React.createElement(InfoWindow, {\n          key: index,\n          id: index,\n          position: {\n            lat: element.lat,\n            lng: element.long\n          },\n          icon: {\n            url: \"https://img.icons8.com/emoji/48/000000/man-health-worker.png\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 160\n          },\n          __self: this\n        });\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.loadZipCode();\n  }\n\n  render() {\n    return React.createElement(Grid, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177\n      },\n      __self: this\n    }, React.createElement(Col, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178\n      },\n      __self: this\n    }, React.createElement(Form, {\n      handleFormSubmit: this.handleFormSubmit,\n      handleInputChange: this.handleInputChange,\n      location: this.state.location,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179\n      },\n      __self: this\n    })), React.createElement(Col, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185\n      },\n      __self: this\n    }, React.createElement(Map, {\n      className: \"map\",\n      google: this.props.google,\n      onClick: this.onMapClicked,\n      zoom: 14,\n      initialCenter: {\n        lat: 25.827848,\n        lng: -80.316078\n      },\n      style: mapStyles,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186\n      },\n      __self: this\n    }, this.displayMarkers())));\n  }\n\n}\nexport default GoogleApiWrapper({\n  apiKey: \"AIzaSyCB4wg9-CH6VEhpkHAvW-FnldCeh4Hojm8\"\n})(MapContainer); // export default MapContainer;","map":{"version":3,"sources":["/Users/miguelgalarraga/googlemapreact/src/App.js"],"names":["React","Component","Map","InfoWindow","Marker","GoogleApiWrapper","API","Form","Frame","Wrapper","Col","Grid","mapStyles","width","height","MapContainer","state","laT1","lnG1","zipcode","elements","contentString","activeMarker","selectedPlace","showingInfoWindow","loadZipCode","getZipCode","then","res","setState","location","data","lat","lng","catch","err","console","log","handleInputChange","event","target","value","handleFormSubmit","preventDefault","status","Error","secondfunc","error","getDoctor","results","Object","keys","map","i","newStateArray","slice","length","push","long","lon","name","street","visit_address","city","zip","phone","phones","number","info","newStateArray1","onMarkerClick","props","marker","onInfoWindowClose","onMapClicked","displayMarkers","element","index","url","displayInfoWindow","componentDidMount","render","google","apiKey"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,GAAT,EAAcC,UAAd,EAA0BC,MAA1B,EAAkCC,gBAAlC,QAA0D,mBAA1D;AACA,OAAOC,GAAP,MAAgB,aAAhB;AACA,OAAOC,IAAP,MAAiB,mBAAjB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,OAAP,MAAoB,sBAApB;AACA,SAASC,GAAT,EAAaC,IAAb,QAAyB,wBAAzB;AAEA,MAAMC,SAAS,GAAG;AAChBC,EAAAA,KAAK,EAAE,KADS;AAEhBC,EAAAA,MAAM,EAAE;AAFQ,CAAlB;AAKA,OAAO,MAAMC,YAAN,SAA2Bd,SAA3B,CAAqC;AAAA;AAAA;AAAA,SAC1Ce,KAD0C,GAClC;AACNC,MAAAA,IAAI,EAAE,CADA;AAENC,MAAAA,IAAI,EAAE,CAFA;AAGNC,MAAAA,OAAO,EAAE,CAHH;AAINC,MAAAA,QAAQ,EAAE,EAJJ;AAKNC,MAAAA,aAAa,EAAE,EALT;AAMNC,MAAAA,YAAY,EAAE,EANR;AAONC,MAAAA,aAAa,EAAE,EAPT;AAQNC,MAAAA,iBAAiB,EAAE;AARb,KADkC;;AAAA,SAgB1CC,WAhB0C,GAgB5B,MAAM;AAClBnB,MAAAA,GAAG,CAACoB,UAAJ,GACGC,IADH,CACQC,GAAG,IAAI,KAAKC,QAAL,CAAc;AAAEC,QAAAA,QAAQ,EAAEF,GAAG,CAACG,IAAhB;AAAsBC,QAAAA,GAAG,EAAE,EAA3B;AAA+BC,QAAAA,GAAG,EAAE;AAApC,OAAd,CADf,EAEGC,KAFH,CAESC,GAAG,IAAIC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAFhB;AAGD,KApByC;;AAAA,SAsB1CG,iBAtB0C,GAsBtBC,KAAK,IAAI;AAC3B,WAAKV,QAAL,CAAc;AAAEV,QAAAA,OAAO,EAAEoB,KAAK,CAACC,MAAN,CAAaC;AAAxB,OAAd;AACD,KAxByC;;AAAA,SA0B1CC,gBA1B0C,GA0BvBH,KAAK,IAAI;AAC1BA,MAAAA,KAAK,CAACI,cAAN;AACArC,MAAAA,GAAG,CAACoB,UAAJ,CAAe,KAAKV,KAAL,CAAWG,OAA1B,EACGQ,IADH,CACQC,GAAG,IAAI;AACX,YAAIA,GAAG,CAACG,IAAJ,CAASa,MAAT,KAAoB,OAAxB,EAAiC;AAC/B,gBAAM,IAAIC,KAAJ,CAAUjB,GAAG,CAACG,IAAJ,CAASD,QAAnB,CAAN;AACD;;AACD,aAAKD,QAAL,CAAc;AAAEZ,UAAAA,IAAI,EAAEW,GAAG,CAACG,IAAJ,CAASC,GAAjB;AAAsBd,UAAAA,IAAI,EAAEU,GAAG,CAACG,IAAJ,CAASE;AAArC,SAAd;AACAG,QAAAA,OAAO,CAACC,GAAR,CAAY,KAAKrB,KAAL,CAAWC,IAAvB,EAA6B,KAAKD,KAAL,CAAWE,IAAxC;AACA,aAAK4B,UAAL,CAAgB,KAAK9B,KAAL,CAAWC,IAA3B,EAAiC,KAAKD,KAAL,CAAWE,IAA5C;AACD,OARH,EASGgB,KATH,CASSC,GAAG,IAAI,KAAKN,QAAL,CAAc;AAAEkB,QAAAA,KAAK,EAAEZ,GAAG,CAACL;AAAb,OAAd,CAThB;AAUD,KAtCyC;;AAAA,SAwC1CgB,UAxC0C,GAwC7B,MAAM;AACjBxC,MAAAA,GAAG,CAAC0C,SAAJ,CAAc,KAAKhC,KAAL,CAAWC,IAAzB,EAA+B,KAAKD,KAAL,CAAWE,IAA1C,EAAgDS,IAAhD,CAAqDC,GAAG,IAAI;AAC1D,cAAMqB,OAAO,GAAGC,MAAM,CAACC,IAAP,CAAYvB,GAAG,CAACG,IAAhB,EAAsBqB,GAAtB,CAA0BC,CAAC,IAAIzB,GAAG,CAACG,IAAJ,CAASsB,CAAT,CAA/B,CAAhB;AACA,YAAIC,aAAa,GAAG,KAAKtC,KAAL,CAAWI,QAAX,CAAoBmC,KAApB,EAApB;;AACA,aAAK,IAAIF,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGJ,OAAO,CAAC,CAAD,CAAP,CAAWO,MAA/B,EAAuCH,CAAC,EAAxC,EAA4C;AAC1CC,UAAAA,aAAa,CAACG,IAAd,CAAmB;AACjBzB,YAAAA,GAAG,EAAEiB,OAAO,CAAC,CAAD,CAAP,CAAWI,CAAX,EAAcrB,GADF;AAEjB0B,YAAAA,IAAI,EAAET,OAAO,CAAC,CAAD,CAAP,CAAWI,CAAX,EAAcM,GAFH;AAGjBC,YAAAA,IAAI,EAAEX,OAAO,CAAC,CAAD,CAAP,CAAWI,CAAX,EAAcO,IAHH;AAIjBC,YAAAA,MAAM,EAAEZ,OAAO,CAAC,CAAD,CAAP,CAAWI,CAAX,EAAcS,aAAd,CAA4BD,MAJnB;AAKjBE,YAAAA,IAAI,EAAEd,OAAO,CAAC,CAAD,CAAP,CAAWI,CAAX,EAAcS,aAAd,CAA4BC,IALjB;AAMjB/C,YAAAA,KAAK,EAAEiC,OAAO,CAAC,CAAD,CAAP,CAAWI,CAAX,EAAcS,aAAd,CAA4B9C,KANlB;AAOjBgD,YAAAA,GAAG,EAAEf,OAAO,CAAC,CAAD,CAAP,CAAWI,CAAX,EAAcS,aAAd,CAA4BE,GAPhB;AAQjBC,YAAAA,KAAK,EAAEhB,OAAO,CAAC,CAAD,CAAP,CAAWI,CAAX,EAAca,MAAd,CAAqB,CAArB,EAAwBC;AARd,WAAnB;AAUD;;AACD,aAAKtC,QAAL,CAAc;AAAET,UAAAA,QAAQ,EAAEkC;AAAZ,SAAd;AACAlB,QAAAA,OAAO,CAACC,GAAR,CAAY,KAAKrB,KAAL,CAAWI,QAAvB;AACA,aAAKgD,IAAL,CAAU,KAAKpD,KAAL,CAAWI,QAArB;AACD,OAlBD;AAmBD,KA5DyC;;AAAA,SA8D1CgD,IA9D0C,GA8DnC,MAAM;AACX,UAAIC,cAAc,GAAG,KAAKrD,KAAL,CAAWK,aAAX,CAAyBkC,KAAzB,EAArB;;AACA,WAAK,IAAIF,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAKrC,KAAL,CAAWI,QAAX,CAAoBoC,MAAxC,EAAgDH,CAAC,EAAjD,EAAqD;AACnDgB,QAAAA,cAAc,CAACZ,IAAf,CACE,uBACE,uBADF,GAEE,QAFF,GAGE,KAAKzC,KAAL,CAAWI,QAAX,CAAoBiC,CAApB,EAAuBO,IAHzB,GAIE,MAJF,GAKE,KAAK5C,KAAL,CAAWI,QAAX,CAAoBiC,CAApB,EAAuBQ,MALzB,GAME,QANF,GAOE,OAPF,GAQE,KAAK7C,KAAL,CAAWI,QAAX,CAAoBiC,CAApB,EAAuBU,IARzB,GASE,GATF,GAUE,GAVF,GAWE,KAAK/C,KAAL,CAAWI,QAAX,CAAoBiC,CAApB,EAAuBrC,KAXzB,GAYE,GAZF,GAaE,GAbF,GAcE,KAAKA,KAAL,CAAWI,QAAX,CAAoBiC,CAApB,EAAuBW,GAdzB,GAeE,QAfF,GAgBE,OAhBF,GAiBE,QAjBF,GAkBE,KAAKhD,KAAL,CAAWI,QAAX,CAAoBiC,CAApB,EAAuBY,KAlBzB,GAmBE,QApBJ;AAsBD;;AACD,WAAKpC,QAAL,CAAc;AAAER,QAAAA,aAAa,EAAEgD;AAAjB,OAAd;AACAjC,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKrB,KAAL,CAAWK,aAAvB;AACD,KA1FyC;;AAAA,SA4F1CiD,aA5F0C,GA4F1B,CAACC,KAAD,EAAQC,MAAR,KACd,KAAK3C,QAAL,CAAc;AACZP,MAAAA,YAAY,EAAEkD,MADF;AAEZjD,MAAAA,aAAa,EAAEgD,KAFH;AAGZ/C,MAAAA,iBAAiB,EAAE;AAHP,KAAd,CA7FwC;;AAAA,SAmG1CiD,iBAnG0C,GAmGtB,MAClB,KAAK5C,QAAL,CAAc;AACZP,MAAAA,YAAY,EAAE,IADF;AAEZE,MAAAA,iBAAiB,EAAE;AAFP,KAAd,CApGwC;;AAAA,SAyG1CkD,YAzG0C,GAyG3B,MAAM;AACnB,UAAI,KAAK1D,KAAL,CAAWQ,iBAAf,EACE,KAAKK,QAAL,CAAc;AACZP,QAAAA,YAAY,EAAE,IADF;AAEZE,QAAAA,iBAAiB,EAAE;AAFP,OAAd;AAIH,KA/GyC;;AAAA,SAiH1CmD,cAjH0C,GAiHzB,MAAM;AACrB,aAAO,KAAK3D,KAAL,CAAWI,QAAX,CAAoBgC,GAApB,CAAwB,CAACwB,OAAD,EAAUC,KAAV,KAAoB;AACjD,eACE,oBAAC,MAAD;AACE,UAAA,GAAG,EAAEA,KADP;AAEE,UAAA,EAAE,EAAEA,KAFN;AAGE,UAAA,QAAQ,EAAE;AACR7C,YAAAA,GAAG,EAAE4C,OAAO,CAAC5C,GADL;AAERC,YAAAA,GAAG,EAAE2C,OAAO,CAAClB;AAFL,WAHZ;AAOE,UAAA,IAAI,EAAE;AACJoB,YAAAA,GAAG,EAAE;AADD,WAPR;AAUE,UAAA,OAAO,EAAE,KAAKR,aAVhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAYE,oBAAC,UAAD;AACE,UAAA,MAAM,EAAE,KAAKtD,KAAL,CAAWM,YADrB;AAEE,UAAA,OAAO,EAAE,KAAKmD,iBAFhB;AAGE,UAAA,OAAO,EAAE,KAAKzD,KAAL,CAAWQ,iBAHtB;AAIE,UAAA,UAAU,EAAE,KAAKR,KAAL,CAAWK,aAAX,CAAyB,CAAzB,CAJd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAK,KAAKL,KAAL,CAAWO,aAAX,CAAyBqC,IAA9B,CADF,CANF,CAZF,CADF;AAyBD,OA1BM,CAAP;AA2BD,KA7IyC;;AAAA,SA+I1CmB,iBA/I0C,GA+ItB,MAAM;AACxB,aAAO,KAAK/D,KAAL,CAAWI,QAAX,CAAoBgC,GAApB,CAAwB,CAACwB,OAAD,EAAUC,KAAV,KAAoB;AACjD,eACE,oBAAC,UAAD;AACE,UAAA,GAAG,EAAEA,KADP;AAEE,UAAA,EAAE,EAAEA,KAFN;AAGE,UAAA,QAAQ,EAAE;AACR7C,YAAAA,GAAG,EAAE4C,OAAO,CAAC5C,GADL;AAERC,YAAAA,GAAG,EAAE2C,OAAO,CAAClB;AAFL,WAHZ;AAOE,UAAA,IAAI,EAAE;AACJoB,YAAAA,GAAG,EAAE;AADD,WAPR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAaD,OAdM,CAAP;AAeD,KA/JyC;AAAA;;AAY1CE,EAAAA,iBAAiB,GAAG;AAClB,SAAKvD,WAAL;AACD;;AAmJDwD,EAAAA,MAAM,GAAG;AACP,WACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,IAAD;AACE,MAAA,gBAAgB,EAAE,KAAKvC,gBADzB;AAEE,MAAA,iBAAiB,EAAE,KAAKJ,iBAF1B;AAGE,MAAA,QAAQ,EAAE,KAAKtB,KAAL,CAAWc,QAHvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF,EAQI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA,oBAAC,GAAD;AACE,MAAA,SAAS,EAAC,KADZ;AAEE,MAAA,MAAM,EAAE,KAAKyC,KAAL,CAAWW,MAFrB;AAGE,MAAA,OAAO,EAAE,KAAKR,YAHhB;AAIE,MAAA,IAAI,EAAE,EAJR;AAKE,MAAA,aAAa,EAAE;AAAE1C,QAAAA,GAAG,EAAE,SAAP;AAAkBC,QAAAA,GAAG,EAAE,CAAC;AAAxB,OALjB;AAME,MAAA,KAAK,EAAErB,SANT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAQG,KAAK+D,cAAL,EARH,CADA,CARJ,CADF;AAuBD;;AAzLyC;AA4L5C,eAAetE,gBAAgB,CAAC;AAC9B8E,EAAAA,MAAM,EAAE;AADsB,CAAD,CAAhB,CAEZpE,YAFY,CAAf,C,CAIA","sourcesContent":["import React, { Component } from \"react\";\nimport { Map, InfoWindow, Marker, GoogleApiWrapper } from \"google-maps-react\";\nimport API from \"./utils/API\";\nimport Form from \"./components/Form\";\nimport Frame from \"./components/Frame\";\nimport Wrapper from \"./components/Wrapper\";\nimport { Col,Grid } from \"react-native-easy-grid\";\n\nconst mapStyles = {\n  width: \"50%\",\n  height: \"50%\"\n};\n\nexport class MapContainer extends Component {\n  state = {\n    laT1: 0,\n    lnG1: 0,\n    zipcode: 0,\n    elements: [],\n    contentString: [],\n    activeMarker: {},\n    selectedPlace: {},\n    showingInfoWindow: false\n  };\n\n  componentDidMount() {\n    this.loadZipCode();\n  }\n\n  loadZipCode = () => {\n    API.getZipCode()\n      .then(res => this.setState({ location: res.data, lat: \"\", lng: \"\" }))\n      .catch(err => console.log(err));\n  };\n\n  handleInputChange = event => {\n    this.setState({ zipcode: event.target.value });\n  };\n\n  handleFormSubmit = event => {\n    event.preventDefault();\n    API.getZipCode(this.state.zipcode)\n      .then(res => {\n        if (res.data.status === \"error\") {\n          throw new Error(res.data.location);\n        }\n        this.setState({ laT1: res.data.lat, lnG1: res.data.lng });\n        console.log(this.state.laT1, this.state.lnG1);\n        this.secondfunc(this.state.laT1, this.state.lnG1);\n      })\n      .catch(err => this.setState({ error: err.location }));\n  };\n\n  secondfunc = () => {\n    API.getDoctor(this.state.laT1, this.state.lnG1).then(res => {\n      const results = Object.keys(res.data).map(i => res.data[i]);\n      var newStateArray = this.state.elements.slice();\n      for (var i = 0; i < results[1].length; i++) {\n        newStateArray.push({\n          lat: results[1][i].lat,\n          long: results[1][i].lon,\n          name: results[1][i].name,\n          street: results[1][i].visit_address.street,\n          city: results[1][i].visit_address.city,\n          state: results[1][i].visit_address.state,\n          zip: results[1][i].visit_address.zip,\n          phone: results[1][i].phones[0].number\n        });\n      }\n      this.setState({ elements: newStateArray });\n      console.log(this.state.elements);\n      this.info(this.state.elements);\n    });\n  };\n\n  info = () => {\n    var newStateArray1 = this.state.contentString.slice();\n    for (var i = 0; i < this.state.elements.length; i++) {\n      newStateArray1.push(\n        '<div id=\"content\">' +\n          '<div id=\"siteNotice\">' +\n          \"</div>\" +\n          this.state.elements[i].name +\n          \"<div\" +\n          this.state.elements[i].street +\n          \"</div>\" +\n          \"<div>\" +\n          this.state.elements[i].city +\n          \",\" +\n          \" \" +\n          this.state.elements[i].state +\n          \",\" +\n          \" \" +\n          this.state.elements[i].zip +\n          \"</div>\" +\n          \"<div>\" +\n          \"phone:\" +\n          this.state.elements[i].phone +\n          \"</div>\"\n      );\n    }\n    this.setState({ contentString: newStateArray1 });\n    console.log(this.state.contentString);\n  };\n\n  onMarkerClick = (props, marker) =>\n    this.setState({\n      activeMarker: marker,\n      selectedPlace: props,\n      showingInfoWindow: true\n    });\n\n  onInfoWindowClose = () =>\n    this.setState({\n      activeMarker: null,\n      showingInfoWindow: false\n    });\n\n  onMapClicked = () => {\n    if (this.state.showingInfoWindow)\n      this.setState({\n        activeMarker: null,\n        showingInfoWindow: false\n      });\n  };\n\n  displayMarkers = () => {\n    return this.state.elements.map((element, index) => {\n      return (\n        <Marker\n          key={index}\n          id={index}\n          position={{\n            lat: element.lat,\n            lng: element.long\n          }}\n          icon={{\n            url: \"https://img.icons8.com/emoji/48/000000/man-health-worker.png\"\n          }}\n          onClick={this.onMarkerClick}\n        >\n          <InfoWindow\n            marker={this.state.activeMarker}\n            onClose={this.onInfoWindowClose}\n            visible={this.state.showingInfoWindow}\n            setContent={this.state.contentString[1]}\n          >\n            <div>\n              <h4>{this.state.selectedPlace.name}</h4>\n            </div>\n          </InfoWindow>\n        </Marker>\n      );\n    });\n  };\n\n  displayInfoWindow = () => {\n    return this.state.elements.map((element, index) => {\n      return (\n        <InfoWindow\n          key={index}\n          id={index}\n          position={{\n            lat: element.lat,\n            lng: element.long\n          }}\n          icon={{\n            url: \"https://img.icons8.com/emoji/48/000000/man-health-worker.png\"\n          }}\n        />\n      );\n    });\n  };\n\n  render() {\n    return (\n      <Grid>\n        <Col>\n          <Form\n            handleFormSubmit={this.handleFormSubmit}\n            handleInputChange={this.handleInputChange}\n            location={this.state.location}\n          />\n          </Col>\n          <Col>\n          <Map\n            className=\"map\"\n            google={this.props.google}\n            onClick={this.onMapClicked}\n            zoom={14}\n            initialCenter={{ lat: 25.827848, lng: -80.316078 }}\n            style={mapStyles}\n          >\n            {this.displayMarkers()}\n          </Map>\n          </Col>\n      </Grid>\n    );\n  }\n}\n\nexport default GoogleApiWrapper({\n  apiKey: \"AIzaSyCB4wg9-CH6VEhpkHAvW-FnldCeh4Hojm8\"\n})(MapContainer);\n\n// export default MapContainer;\n"]},"metadata":{},"sourceType":"module"}