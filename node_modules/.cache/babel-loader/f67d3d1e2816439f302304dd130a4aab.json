{"ast":null,"code":"var _jsxFileName = \"/Users/miguelgalarraga/googlemapreact/src/App.js\";\nimport React from \"react\";\nimport axios from \"axios\";\nimport Header from \"./components/Header\";\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      laT1: 0,\n      lnG1: 0,\n      zipcode: 33166\n    };\n  }\n\n  // componentDidMount() {\n  //   axios.get(\n  //       \"https://cors-anywhere.herokuapp.com/https://www.zipcodeapi.com/rest/c1wr56zxJrT9VdP63xSMddq1jzu3difJ6qcIpH87Ak8MWbBRQsfzPP3r5ISW15ET/info.json/\" +\n  //     this.state.zipcode +\n  //     \"/degrees\"\n  //     )\n  //     .then(res => {\n  //       console.log(JSON.stringify(res));\n  //       this.setState({ laT1:res.data.lat, lnG1:res.data.lng})\n  //       console.log(this.state.laT1,this.state.lnG1);\n  //       // .catch(err => console.log(err));\n  //     });\n  // }\n  async componentDidMount() {\n    // Make first two requests\n    const [firstResponse] = await Promise.all([axios.get(\"https://cors-anywhere.herokuapp.com/https://www.zipcodeapi.com/rest/c1wr56zxJrT9VdP63xSMddq1jzu3difJ6qcIpH87Ak8MWbBRQsfzPP3r5ISW15ET/info.json/\" + this.state.zipcode + \"/degrees\")]); // Make third request using responses from the first two\n\n    const thirdResponse = await axios.get(\"https://api.betterdoctor.com/2016-03-01/practices?location=\" + firstResponse.data.lat + \",\" + firstResponse.lng + \",\" + 10 + \"&limit=2000&user_key=fb84a6a95d50d7f1b141dcc24be094dd\"); // Update state once with all 3 responses\n\n    this.setState({\n      laT1: firstResponse.data.lat,\n      lnG1: firstResponse.data.lng,\n      results: thirdResponse.data\n    });\n  }\n\n  render() {\n    return React.createElement(Header, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, \"laT1 =\", this.state.laT1, \"lnG1 =\", this.state.lnG1);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/miguelgalarraga/googlemapreact/src/App.js"],"names":["React","axios","Header","App","Component","state","laT1","lnG1","zipcode","componentDidMount","firstResponse","Promise","all","get","thirdResponse","data","lat","lng","setState","results","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;;AAEA,MAAMC,GAAN,SAAkBH,KAAK,CAACI,SAAxB,CAAkC;AAAA;AAAA;AAAA,SAChCC,KADgC,GACxB;AACNC,MAAAA,IAAI,EAAE,CADA;AAENC,MAAAA,IAAI,EAAE,CAFA;AAGNC,MAAAA,OAAO,EAAE;AAHH,KADwB;AAAA;;AAShC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,QAAMC,iBAAN,GAA0B;AAExB;AACA,UAAM,CAACC,aAAD,IAAkB,MAAMC,OAAO,CAACC,GAAR,CAAY,CACxCX,KAAK,CAACY,GAAN,CACE,oJACF,KAAKR,KAAL,CAAWG,OADT,GAEF,UAHA,CADwC,CAAZ,CAA9B,CAHwB,CAWxB;;AACA,UAAMM,aAAa,GAAG,MAAMb,KAAK,CAACY,GAAN,CAAU,gEACtCH,aAAa,CAACK,IAAd,CAAmBC,GADmB,GAEtC,GAFsC,GAGtCN,aAAa,CAACO,GAHwB,GAItC,GAJsC,GAKtC,EALsC,GAMtC,uDAN4B,CAA5B,CAZwB,CAoBxB;;AACA,SAAKC,QAAL,CAAc;AACZZ,MAAAA,IAAI,EAAEI,aAAa,CAACK,IAAd,CAAmBC,GADb;AAEZT,MAAAA,IAAI,EAAEG,aAAa,CAACK,IAAd,CAAmBE,GAFb;AAGZE,MAAAA,OAAO,EAAEL,aAAa,CAACC;AAHX,KAAd;AAKD;;AAIDK,EAAAA,MAAM,GAAG;AAEP,WACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBACS,KAAKf,KAAL,CAAWC,IADpB,YAES,KAAKD,KAAL,CAAWE,IAFpB,CADF;AAOD;;AA9D+B;;AAiElC,eAAeJ,GAAf","sourcesContent":["import React from \"react\";\nimport axios from \"axios\";\nimport Header from \"./components/Header\";\n\nclass App extends React.Component {\n  state = {\n    laT1: 0,\n    lnG1: 0,\n    zipcode: 33166\n  };\n\n\n\n  // componentDidMount() {\n  //   axios.get(\n  //       \"https://cors-anywhere.herokuapp.com/https://www.zipcodeapi.com/rest/c1wr56zxJrT9VdP63xSMddq1jzu3difJ6qcIpH87Ak8MWbBRQsfzPP3r5ISW15ET/info.json/\" +\n  //     this.state.zipcode +\n  //     \"/degrees\"\n  //     )\n  //     .then(res => {\n  //       console.log(JSON.stringify(res));\n  //       this.setState({ laT1:res.data.lat, lnG1:res.data.lng})\n  //       console.log(this.state.laT1,this.state.lnG1);\n  //       // .catch(err => console.log(err));\n  //     });\n  // }\n\n  async componentDidMount() {\n\n    // Make first two requests\n    const [firstResponse] = await Promise.all([\n      axios.get(\n        \"https://cors-anywhere.herokuapp.com/https://www.zipcodeapi.com/rest/c1wr56zxJrT9VdP63xSMddq1jzu3difJ6qcIpH87Ak8MWbBRQsfzPP3r5ISW15ET/info.json/\" +\n      this.state.zipcode +\n      \"/degrees\"\n      )\n    ]);\n  \n    // Make third request using responses from the first two\n    const thirdResponse = await axios.get(\"https://api.betterdoctor.com/2016-03-01/practices?location=\" +\n    firstResponse.data.lat +\n    \",\" +\n    firstResponse.lng +\n    \",\" +\n    10 +\n    \"&limit=2000&user_key=fb84a6a95d50d7f1b141dcc24be094dd\");\n  \n    // Update state once with all 3 responses\n    this.setState({\n      laT1: firstResponse.data.lat,\n      lnG1: firstResponse.data.lng,\n      results: thirdResponse.data\n    });\n  }\n\n  \n\n  render() {\n\n    return (\n      <Header>\n        laT1 ={this.state.laT1}\n        lnG1 ={this.state.lnG1}\n      </Header>\n\n    );\n  }\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}