{"ast":null,"code":"var _jsxFileName = \"/Users/miguelgalarraga/googlemapreact/src/App.js\";\nimport React, { Component } from \"react\";\nimport { Map, InfoWindow, Marker, GoogleApiWrapper } from \"google-maps-react\";\nimport API from \"./utils/API\";\nimport Wrapper from \"./components/Wrapper\";\nimport Form from \"./components/Form\";\nimport { Container } from \"./components/Grid\";\nexport class MapContainer extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      laT1: \"\",\n      lnG1: \"\",\n      zipcode: \"\",\n      elements: [],\n      activeMarker: {},\n      selectedPlace: {},\n      selectedPhone: {},\n      showingInfoWindow: false\n    };\n\n    this.loadZipCode = () => {\n      API.getZipCode().then(res => this.setState({\n        location: res.data,\n        lat: \"\",\n        lng: \"\"\n      })).catch(err => console.log(err));\n    };\n\n    this.handleInputChange = event => {\n      this.setState({\n        zipcode: event.target.value\n      });\n    };\n\n    this.handleFormSubmit = event => {\n      event.preventDefault();\n      API.getZipCode(this.state.zipcode).then(res => {\n        if (res.data.status === \"error\") {\n          throw new Error(res.data.location);\n        }\n\n        this.setState({\n          laT1: res.data.lat,\n          lnG1: res.data.lng\n        });\n        console.log(this.state.laT1, this.state.lnG1);\n        this.secondfunc(this.state.laT1, this.state.lnG1);\n      }).catch(err => this.setState({\n        error: err.location\n      }));\n    };\n\n    this.secondfunc = () => {\n      API.getDoctor(this.state.laT1, this.state.lnG1).then(res => {\n        const results = Object.keys(res.data).map(i => res.data[i]);\n        var newStateArray = this.state.elements.slice();\n\n        for (var i = 0; i < results[1].length; i++) {\n          newStateArray.push({\n            id: i,\n            lat: results[1][i].lat,\n            long: results[1][i].lon,\n            doctorname: results[1][i].name,\n            street: results[1][i].visit_address.street,\n            city: results[1][i].visit_address.city,\n            state: results[1][i].visit_address.state,\n            zip: results[1][i].visit_address.zip,\n            phone: results[1][i].phones[0].number\n          });\n        }\n\n        this.setState({\n          elements: newStateArray\n        });\n        console.log(this.state.elements);\n      });\n    };\n\n    this.onMarkerClick = (props, marker, e) => {\n      this.setState({\n        selectedPlace: props,\n        selectedPhone: props,\n        activeMarker: marker,\n        showingInfoWindow: true\n      });\n    };\n\n    this.onInfoWindowClose = () => {\n      this.setState({\n        activeMarker: null,\n        showingInfoWindow: false\n      });\n    };\n\n    this.onMapClick = props => {\n      if (this.state.showingInfoWindow) {\n        this.setState({\n          showingInfoWindow: false,\n          activeMarker: null\n        });\n      }\n    };\n\n    this.displayMarkers = () => {\n      return this.state.elements.map((element, index) => {\n        return React.createElement(Marker, {\n          key: index,\n          id: index,\n          onClick: this.onMarkerClick,\n          position: {\n            lat: element.lat,\n            lng: element.long\n          },\n          name: element.doctorname,\n          phone: element.phone,\n          icon: {\n            url: \"https://img.icons8.com/emoji/48/000000/man-health-worker.png\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 98\n          },\n          __self: this\n        }) //   <InfoWindow\n        //     marker={this.state.activeMarker}\n        //     onClose={this.onInfoWindowClose}\n        //     visible={this.state.showingInfoWindow}\n        //   >\n        //     <div>{element.doctorname}</div>\n        //     <div>\n        //       {element.street},{element.city},{element.state},{element.zip}\n        //     </div>\n        //     <div>\n        //       {\"phone:\"} {element.phone}\n        //     </div>\n        //   </InfoWindow>\n        // </Marker>\n        ;\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.loadZipCode();\n  }\n\n  render() {\n    return React.createElement(Wrapper, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }, React.createElement(Container, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }, React.createElement(Form, {\n      handleFormSubmit: this.handleFormSubmit,\n      handleInputChange: this.handleInputChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    }, React.createElement(Map, {\n      className: \"map\",\n      google: this.props.google,\n      onClick: this.onMapClick,\n      zoom: 14,\n      initialCenter: {\n        lat: 25.827848,\n        lng: -80.316078\n      },\n      style: {\n        height: \"50%\",\n        position: \"relative\",\n        width: \"50%\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    }, this.displayMarkers(), React.createElement(Marker, {\n      name: \"Zip Code's Center Position\",\n      onClick: this.onMarkerClick,\n      position: {\n        lat: this.state.laT1,\n        lng: this.state.lnG1\n      },\n      icon: {\n        url: \"https://img.icons8.com/color/48/000000/worldwide-location.png\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152\n      },\n      __self: this\n    }), React.createElement(InfoWindow, {\n      marker: this.state.activeMarker,\n      onClose: this.onInfoWindowClose,\n      visible: this.state.showingInfoWindow,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166\n      },\n      __self: this\n    }, this.state.selectedPlace.name), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167\n      },\n      __self: this\n    }, this.state.selectedPhone.phone))))));\n  }\n\n}\nconst APIkey3 = process.env.REACT_APP_GOOGLE_KEY;\nexport default GoogleApiWrapper({\n  apiKey: APIkey3\n})(MapContainer); // export default MapContainer;","map":{"version":3,"sources":["/Users/miguelgalarraga/googlemapreact/src/App.js"],"names":["React","Component","Map","InfoWindow","Marker","GoogleApiWrapper","API","Wrapper","Form","Container","MapContainer","state","laT1","lnG1","zipcode","elements","activeMarker","selectedPlace","selectedPhone","showingInfoWindow","loadZipCode","getZipCode","then","res","setState","location","data","lat","lng","catch","err","console","log","handleInputChange","event","target","value","handleFormSubmit","preventDefault","status","Error","secondfunc","error","getDoctor","results","Object","keys","map","i","newStateArray","slice","length","push","id","long","lon","doctorname","name","street","visit_address","city","zip","phone","phones","number","onMarkerClick","props","marker","e","onInfoWindowClose","onMapClick","displayMarkers","element","index","url","componentDidMount","render","google","height","position","width","APIkey3","process","env","REACT_APP_GOOGLE_KEY","apiKey"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { Map, InfoWindow, Marker, GoogleApiWrapper } from \"google-maps-react\";\nimport API from \"./utils/API\";\nimport Wrapper from \"./components/Wrapper\";\nimport Form from \"./components/Form\";\nimport { Container } from \"./components/Grid\";\n\nexport class MapContainer extends Component {\n  state = {\n    laT1: \"\",\n    lnG1: \"\",\n    zipcode: \"\",\n    elements: [],\n    activeMarker: {},\n    selectedPlace: {},\n    selectedPhone: {},\n    showingInfoWindow: false\n  };\n\n  componentDidMount() {\n    this.loadZipCode();\n  }\n\n  loadZipCode = () => {\n    API.getZipCode()\n      .then(res => this.setState({ location: res.data, lat: \"\", lng: \"\" }))\n      .catch(err => console.log(err));\n  };\n\n  handleInputChange = event => {\n    this.setState({ zipcode: event.target.value });\n  };\n\n  handleFormSubmit = event => {\n    event.preventDefault();\n    API.getZipCode(this.state.zipcode)\n      .then(res => {\n        if (res.data.status === \"error\") {\n          throw new Error(res.data.location);\n        }\n        this.setState({ laT1: res.data.lat, lnG1: res.data.lng });\n        console.log(this.state.laT1, this.state.lnG1);\n        this.secondfunc(this.state.laT1, this.state.lnG1);\n      })\n      .catch(err => this.setState({ error: err.location }));\n  };\n\n  secondfunc = () => {\n    API.getDoctor(this.state.laT1, this.state.lnG1).then(res => {\n      const results = Object.keys(res.data).map(i => res.data[i]);\n      var newStateArray = this.state.elements.slice();\n      for (var i = 0; i < results[1].length; i++) {\n        newStateArray.push({\n          id: i,\n          lat: results[1][i].lat,\n          long: results[1][i].lon,\n          doctorname: results[1][i].name,\n          street: results[1][i].visit_address.street,\n          city: results[1][i].visit_address.city,\n          state: results[1][i].visit_address.state,\n          zip: results[1][i].visit_address.zip,\n          phone: results[1][i].phones[0].number\n        });\n      }\n      this.setState({ elements: newStateArray });\n      console.log(this.state.elements);\n    });\n  };\n\n  onMarkerClick = (props, marker, e) => {\n    this.setState({\n      selectedPlace: props,\n      selectedPhone:props,\n      activeMarker: marker,\n      showingInfoWindow: true\n    });\n  };\n\n  onInfoWindowClose = () => {\n    this.setState({\n      activeMarker: null,\n      showingInfoWindow: false\n    });\n  };\n\n  onMapClick = props => {\n    if (this.state.showingInfoWindow) {\n      this.setState({\n        showingInfoWindow: false,\n        activeMarker: null\n      });\n    }\n  };\n\n  displayMarkers = () => {\n    return this.state.elements.map((element, index) => {\n      return (\n        <Marker\n          key={index}\n          id={index}\n          onClick={this.onMarkerClick}\n          position={{\n            lat: element.lat,\n            lng: element.long\n          }}\n          name={element.doctorname}\n          phone={element.phone}\n          icon={{\n            url: \"https://img.icons8.com/emoji/48/000000/man-health-worker.png\"\n          }}\n        />\n        //   <InfoWindow\n        //     marker={this.state.activeMarker}\n        //     onClose={this.onInfoWindowClose}\n        //     visible={this.state.showingInfoWindow}\n        //   >\n        //     <div>{element.doctorname}</div>\n        //     <div>\n        //       {element.street},{element.city},{element.state},{element.zip}\n        //     </div>\n        //     <div>\n        //       {\"phone:\"} {element.phone}\n        //     </div>\n        //   </InfoWindow>\n        // </Marker>\n      );\n    });\n  };\n\n  render() {\n    return (\n      <Wrapper>\n        <Container>\n          <div>\n            <Form\n              handleFormSubmit={this.handleFormSubmit}\n              handleInputChange={this.handleInputChange}\n            />\n          </div>\n          <br />\n          <br />\n          <div>\n            <Map\n              className=\"map\"\n              google={this.props.google}\n              onClick={this.onMapClick}\n              zoom={14}\n              initialCenter={{ lat: 25.827848, lng: -80.316078 }}\n              style={{ height: \"50%\", position: \"relative\", width: \"50%\" }}\n            >\n              {this.displayMarkers()}\n              <Marker\n                name=\"Zip Code's Center Position\"\n                onClick={this.onMarkerClick}\n                position={{ lat: this.state.laT1, lng: this.state.lnG1 }}\n                icon={{\n                  url:\n                    \"https://img.icons8.com/color/48/000000/worldwide-location.png\"\n                }}\n              />\n              <InfoWindow\n                marker={this.state.activeMarker}\n                onClose={this.onInfoWindowClose}\n                visible={this.state.showingInfoWindow}\n              >\n                <div>{this.state.selectedPlace.name}</div>\n                <div>{this.state.selectedPhone.phone}</div>\n                {/* <div>\n                  {element.street},{element.city},{element.state},{element.zip}\n                </div>\n                <div>\n                  {\"phone:\"} {element.phone}\n                </div> */}\n              </InfoWindow> \n            </Map>\n          </div>\n        </Container>\n      </Wrapper>\n    );\n  }\n}\n\nconst APIkey3 = process.env.REACT_APP_GOOGLE_KEY;\n\nexport default GoogleApiWrapper({\n  apiKey: APIkey3\n})(MapContainer);\n\n// export default MapContainer;\n"]},"metadata":{},"sourceType":"module"}